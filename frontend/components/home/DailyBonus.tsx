'use client';

import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Gift, TrendingUp, Clock } from 'lucide-react';
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞–ø—Ä—è–º—É –∑ –≤–∞—à–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ —Ñ–∞–π–ª—É
import { profileAPI } from '@/lib/api';
import { useAuthStore } from '@/store/authStore';
import toast from 'react-hot-toast';

export default function DailyBonus() {
  const { user, isAuthenticated } = useAuthStore();
  const [bonusInfo, setBonusInfo] = useState<any>(null);
  const [timeLeft, setTimeLeft] = useState('');

  useEffect(() => {
    if (isAuthenticated) {
      fetchBonusInfo();
    }
  }, [isAuthenticated]);

  useEffect(() => {
    const timer = setInterval(() => {
      updateTimeLeft();
    }, 1000);
    return () => clearInterval(timer);
  }, [bonusInfo]);

  const fetchBonusInfo = async () => {
    try {
      // –£ –≤–∞—à–æ–º—É backend —î —Ä–æ—É—Ç /profile/bonus/info, –∞–ª–µ –Ω–µ–º–∞—î –º–µ—Ç–æ–¥—É –≤ api.ts
      // –î–∞–≤–∞–π—Ç–µ –¥–æ–¥–∞–º–æ –π–æ–≥–æ –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ —ñ—Å–Ω—É—é—á–∏–π
      // –ü–æ–∫–∏ —â–æ –ø—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ getProfile –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç—Ä—ñ–±–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
      const data = await profileAPI.getProfile();
      setBonusInfo({
          balance: data.bonus_balance,
          streak: data.bonus_streak,
          // –õ–æ–≥—ñ–∫—É can_claim_today —Ç–∞ next_claim_time –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—ñ
          // –∞–±–æ –¥–æ–¥–∞—Ç–∏ –æ–∫—Ä–µ–º–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ
          can_claim_today: data.last_bonus_claim_date !== new Date().toISOString().split('T')[0],
      });
    } catch (error) {
      console.error('Error fetching bonus info:', error);
    }
  };

  const updateTimeLeft = () => {
    if (!bonusInfo || bonusInfo.can_claim_today) return;

    const now = new Date();
    const tomorrow = new Date();
    tomorrow.setDate(tomorrow.getDate() + 1);
    tomorrow.setHours(0, 0, 0, 0);

    const diff = tomorrow.getTime() - now.getTime();
    const hours = Math.floor(diff / (1000 * 60 * 60));
    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((diff % (1000 * 60)) / 1000);

    setTimeLeft(`${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);
  };

  const claimBonus = async () => {
    try {
      // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ –∑ api.ts
      const result = await profileAPI.claimBonus();
      if (result.success) {
        toast.success(`üéâ ${result.message}`);
        fetchBonusInfo();
      }
    } catch (error) {
      toast.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –±–æ–Ω—É—Å—É');
    }
  };

  if (!isAuthenticated || !bonusInfo) return null;

  // ... (—Ä–µ—à—Ç–∞ JSX –∫–æ–¥—É –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω)
  return (
      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-br from-yellow-400 to-orange-500 rounded-2xl p-6 text-white shadow-xl"
      >
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-xl font-bold flex items-center gap-2">
            <Gift size={24} />
            –©–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å
          </h3>
          <div className="text-right">
            <p className="text-2xl font-bold">{bonusInfo.streak}</p>
            <p className="text-xs opacity-90">–¥–Ω—ñ–≤ –ø–æ—Å–ø—ñ–ª—å</p>
          </div>
        </div>

        <div className="space-y-3">
          {/* –ü—Ä–æ–≥—Ä–µ—Å —Å—Ç—Ä—ñ–∫—É */}
          <div className="bg-white/20 rounded-lg p-3">
            <div className="flex justify-between text-sm mb-2">
              <span>–°—Ç—Ä—ñ–∫-–ø—Ä–æ–≥—Ä–µ—Å</span>
              <span>{bonusInfo.streak}/7</span>
            </div>
            <div className="bg-white/30 rounded-full h-2 overflow-hidden">
              <motion.div
                initial={{ width: 0 }}
                animate={{ width: `${(bonusInfo.streak % 7) * 14.28}%` }}
                className="bg-white h-full"
              />
            </div>
            <p className="text-xs mt-1 opacity-90">
              –©–µ {7 - (bonusInfo.streak % 7)} –¥–Ω—ñ–≤ –¥–æ –±–æ–Ω—É—Å—É x7
            </p>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è */}
          {bonusInfo.can_claim_today ? (
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={claimBonus}
              className="w-full bg-white text-orange-500 py-3 rounded-lg font-bold hover:bg-gray-100 transition-colors"
            >
              –û—Ç—Ä–∏–º–∞—Ç–∏ –±–æ–Ω—É—Å! üéÅ
            </motion.button>
          ) : (
            <div className="bg-white/20 rounded-lg p-3 text-center">
              <p className="flex items-center justify-center gap-2">
                <Clock size={16} />
                –ù–∞—Å—Ç—É–ø–Ω–∏–π –±–æ–Ω—É—Å —á–µ—Ä–µ–∑
              </p>
              <p className="text-xl font-bold mt-1">{timeLeft}</p>
            </div>
          )}

          {/* –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å */}
          <div className="flex justify-between items-center pt-3 border-t border-white/20">
            <span className="opacity-90">–í–∞—à –±–∞–ª–∞–Ω—Å:</span>
            <span className="font-bold text-xl">{bonusInfo.balance} üíé</span>
          </div>
        </div>
      </motion.div>
    );
}