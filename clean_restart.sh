#!/bin/bash

echo "üßπ OhMyRevit - –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "========================================="

# –ö–æ–ª—å–æ—Ä–∏
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –ö—Ä–æ–∫ 1: –ó—É–ø–∏–Ω–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 1: –ó—É–ø–∏–Ω–∫–∞ –≤—Å—ñ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤...${NC}"
docker-compose down -v

# –ö—Ä–æ–∫ 2: –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É Next.js
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 2: –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É...${NC}"
rm -rf frontend/.next
rm -rf frontend/node_modules/.cache
rm -rf frontend/out
rm -rf frontend/.turbo

# –ö—Ä–æ–∫ 3: –û—á–∏—â–µ–Ω–Ω—è Python –∫–µ—à—É
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 3: –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –±–µ–∫–µ–Ω–¥—É...${NC}"
find backend -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null
find backend -type f -name "*.pyc" -delete 2>/dev/null

# –ö—Ä–æ–∫ 4: –í–∏–¥–∞–ª–µ–Ω–Ω—è Docker –æ–±—Ä–∞–∑—ñ–≤
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 4: –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö Docker –æ–±—Ä–∞–∑—ñ–≤...${NC}"
docker rmi ohmyrevit-frontend ohmyrevit-backend 2>/dev/null || true

# –ö—Ä–æ–∫ 5: –ü–µ—Ä–µ–±—É–¥–æ–≤–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 5: –ü–µ—Ä–µ–±—É–¥–æ–≤–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤...${NC}"
docker-compose build --no-cache

# –ö—Ä–æ–∫ 6: –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 6: –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤...${NC}"
docker-compose up -d

# –ö—Ä–æ–∫ 7: –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –ë–î
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 7: –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...${NC}"
sleep 10

# –ö—Ä–æ–∫ 8: –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –º—ñ–≥—Ä–∞—Ü—ñ–π
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 8: –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –º—ñ–≥—Ä–∞—Ü—ñ–π...${NC}"
docker-compose exec backend alembic upgrade head

# –ö—Ä–æ–∫ 9: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 9: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —Å–µ—Ä–≤—ñ—Å—ñ–≤...${NC}"
docker-compose ps

# –ö—Ä–æ–∫ 10: –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API
echo -e "\n${YELLOW}–ö—Ä–æ–∫ 10: –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API...${NC}"
sleep 5
API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health)
if [ "$API_STATUS" -eq 200 ]; then
    echo -e "${GREEN}‚úì API –ø—Ä–∞—Ü—é—î${NC}"
else
    echo -e "${RED}‚úó API –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î (–∫–æ–¥: $API_STATUS)${NC}"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
if [ "$FRONTEND_STATUS" -eq 200 ]; then
    echo -e "${GREEN}‚úì Frontend –ø—Ä–∞—Ü—é—î${NC}"
else
    echo -e "${RED}‚úó Frontend –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î (–∫–æ–¥: $FRONTEND_STATUS)${NC}"
fi

echo -e "\n${GREEN}‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "\n–î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:"
echo -e "  - Frontend: ${GREEN}https://dev.ohmyrevit.pp.ua${NC}"
echo -e "  - API Docs: ${GREEN}https://dev.ohmyrevit.pp.ua/api/docs${NC}"
echo -e "  - Adminer:  ${GREEN}http://localhost:8080${NC}"
echo -e "\n${YELLOW}–õ–æ–≥–∏:${NC} docker-compose logs -f"