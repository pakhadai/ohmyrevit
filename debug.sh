#!/bin/bash

# debug.sh - –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º OhMyRevit

echo "üîç OhMyRevit Debug Script"
echo "========================="

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker
echo -e "\nüì¶ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker..."
if docker ps > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì Docker –ø—Ä–∞—Ü—é—î${NC}"
else
    echo -e "${RED}‚úó Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π${NC}"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo -e "\nüê≥ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤:"
docker-compose ps

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
echo -e "\nüóÑÔ∏è –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
docker-compose exec -T db psql -U ohmyrevit -d ohmyrevit_db -c "SELECT COUNT(*) as users_count FROM users;" 2>/dev/null
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úì –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
else
    echo -e "${RED}‚úó –ü—Ä–æ–±–ª–µ–º–∞ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö${NC}"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ–π
echo -e "\nüìã –°—Ç–∞—Ç—É—Å –º—ñ–≥—Ä–∞—Ü—ñ–π:"
docker-compose exec -T backend alembic current 2>/dev/null

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤ backend
echo -e "\nüìú –û—Å—Ç–∞–Ω–Ω—ñ –ª–æ–≥–∏ Backend (–ø–æ–º–∏–ª–∫–∏):"
docker-compose logs --tail=20 backend | grep -E "ERROR|CRITICAL|Exception" || echo "–ü–æ–º–∏–ª–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API
echo -e "\nüåê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API..."
# OLD: API_HEALTH=$(curl -s http://localhost:8000/health)
API_HEALTH=$(curl -s http://localhost/api/v1/health)
if echo "$API_HEALTH" | grep -q "healthy"; then
    echo -e "${GREEN}‚úì API –¥–æ—Å—Ç—É–ø–Ω–∏–π${NC}"
    echo "Response: $API_HEALTH"
else
    echo -e "${RED}‚úó API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π${NC}"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Frontend
echo -e "\nüé® –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Frontend..."
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
if [ "$FRONTEND_STATUS" -eq 200 ]; then
    echo -e "${GREEN}‚úì Frontend –¥–æ—Å—Ç—É–ø–Ω–∏–π${NC}"
else
    echo -e "${YELLOW}‚ö† Frontend —Å—Ç–∞—Ç—É—Å: $FRONTEND_STATUS${NC}"
fi

# –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
echo -e "\nüß™ –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó..."
TEST_DATA='{
  "id": 999999,
  "first_name": "Test",
  "last_name": "User",
  "username": "testuser",
  "photo_url": "",
  "auth_date": '$(date +%s)',
  "hash": "test_hash_for_development"
}'

RESPONSE=$(curl -s -X POST http://localhost/api/v1/auth/telegram \
  -H "Content-Type: application/json" \
  -d "$TEST_DATA")

if echo "$RESPONSE" | grep -q "access_token"; then
    echo -e "${GREEN}‚úì –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –ø—Ä–∞—Ü—é—î${NC}"
else
    echo -e "${RED}‚úó –ü—Ä–æ–±–ª–µ–º–∞ –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é${NC}"
    echo "Response: $RESPONSE"
fi

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
echo -e "\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:"
echo "1. –Ø–∫—â–æ –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: docker-compose restart db"
echo "2. –Ø–∫—â–æ –º—ñ–≥—Ä–∞—Ü—ñ—ó –Ω–µ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ: docker-compose exec backend alembic upgrade head"
echo "3. –î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤—Å—ñ—Ö –ª–æ–≥—ñ–≤: docker-compose logs -f"
echo "4. –î–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É: docker-compose down && docker-compose up --build"

echo -e "\n‚úÖ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"