# backend/app/bot/router.py
import logging
from typing import Optional
from fastapi import APIRouter, Request, status, Response

from pydantic import BaseModel, Field

from app.core.config import settings
from app.core.telegram_service import telegram_service

logger = logging.getLogger(__name__)
router = APIRouter(prefix="/webhook", tags=["Bot Webhook"])


# --- Pydantic –º–æ–¥–µ–ª—ñ –¥–ª—è Telegram Update ---

class TelegramUser(BaseModel):
    id: int
    is_bot: bool
    first_name: str
    last_name: Optional[str] = None
    username: Optional[str] = None
    language_code: Optional[str] = 'uk'


class Chat(BaseModel):
    id: int
    type: str


class Message(BaseModel):
    message_id: int
    from_user: Optional[TelegramUser] = Field(None, alias='from')
    chat: Chat
    date: int
    text: Optional[str] = None


class Update(BaseModel):
    update_id: int
    message: Optional[Message] = None


# --- –õ–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—ñ—Ç–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å ---

WELCOME_MESSAGES = {
    "uk": (
        "üëã *–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ OhMyRevit!*\n\n"
        "–¶–µ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –±–æ—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è Autodesk Revit.\n\n"
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥ —Å—ñ–º–µ–π—Å—Ç–≤, –ø–ª–∞–≥—ñ–Ω—ñ–≤ —Ç–∞ —à–∞–±–ª–æ–Ω—ñ–≤."
    ),
    "ru": (
        "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OhMyRevit!*\n\n"
        "–≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Autodesk Revit.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Å–µ–º–µ–π—Å—Ç–≤, –ø–ª–∞–≥–∏–Ω–æ–≤ –∏ —à–∞–±–ª–æ–Ω–æ–≤."
    ),
    "en": (
        "üëã *Welcome to OhMyRevit!*\n\n"
        "This is the official bot for the marketplace of the best content for Autodesk Revit.\n\n"
        "Click the button below to open the catalog of families, plugins, and templates."
    ),
}


# --- –í–µ–±—Ö—É–∫ ---

@router.post(f"/{settings.TELEGRAM_BOT_TOKEN}")
async def telegram_webhook(update: Update):
    """
    –ü—Ä–∏–π–º–∞—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram Bot API.
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /start.
    """
    if not update.message or not update.message.from_user or not update.message.text:
        return Response(status_code=status.HTTP_200_OK)

    message = update.message
    user = update.message.from_user
    chat_id = message.chat.id

    if message.text.startswith("/start"):
        logger.info(f"Received /start command from user {user.id}")

        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        lang = user.language_code if user.language_code in WELCOME_MESSAGES else 'en'
        welcome_text = WELCOME_MESSAGES[lang]

        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫—É Mini App
        web_app_button = {
            "text": "üöÄ –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–∞—Ä–∫–µ—Ç",
            "web_app": {"url": settings.FRONTEND_URL}
        }

        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        reply_markup = {
            "inline_keyboard": [[web_app_button]]
        }

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await telegram_service.send_message(
            chat_id=chat_id,
            text=welcome_text,
            reply_markup=reply_markup
        )

    return Response(status_code=status.HTTP_200_OK)