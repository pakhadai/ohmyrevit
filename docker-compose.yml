version: '3.8'

services:
  # PostgreSQL база даних
  db:
    image: postgres:15-alpine
    container_name: ohmyrevit_db
    environment:
      POSTGRES_USER: ${DB_USER:-ohmyrevit}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secretpassword}
      POSTGRES_DB: ${DB_NAME:-ohmyrevit_db}
      # Оптимізації PostgreSQL для швидшого старту
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ohmyrevit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-ohmyrevit} -d ${DB_NAME:-ohmyrevit_db}"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    # Обмеження ресурсів для стабільності
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis для кешування та сесій
  redis:
    image: redis:7-alpine
    container_name: ohmyrevit_redis
    ports:
      - "6379:6379"
    networks:
      - ohmyrevit_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    # Налаштування для швидшого старту
    command: redis-server --save "" --appendonly no
    deploy:
      resources:
        limits:
          memory: 128M

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      cache_from:
        - ohmyrevit_backend:latest
    container_name: ohmyrevit_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://${DB_USER:-ohmyrevit}:${DB_PASSWORD:-secretpassword}@db:5432/${DB_NAME:-ohmyrevit_db}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      DEEPL_API_KEY: ${DEEPL_API_KEY}
      CRYPTOMUS_API_KEY: ${CRYPTOMUS_API_KEY}
      CRYPTOMUS_MERCHANT_ID: ${CRYPTOMUS_MERCHANT_ID}
      RESEND_API_KEY: ${RESEND_API_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      BACKEND_URL: ${BACKEND_URL:-http://localhost:8000}
      DEBUG: ${DEBUG:-True}
      # Оптимізації Python
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ohmyrevit_network
    # Команда з більшою кількістю воркерів для швидкості
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --workers 2
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      cache_from:
        - ohmyrevit_frontend:latest
    container_name: ohmyrevit_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000/api/v1
      NEXT_PUBLIC_TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
      # Оптимізації Next.js
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_TELEMETRY_DISABLED: 1
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ohmyrevit_network
    command: npm run dev
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Adminer для управління БД
  adminer:
    image: adminer:latest
    container_name: ohmyrevit_adminer
    ports:
      - "8080:8080"
    networks:
      - ohmyrevit_network
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  ohmyrevit_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16