services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: ohmyrevit_cloudflared
    restart: unless-stopped
    command: tunnel --config /etc/cloudflared/config.yml run
    volumes:
      - ./config.yml:/etc/cloudflared/config.yml
      - ./2be39487-878c-4780-a32e-e55a82d8e335.json:/etc/cloudflared/2be39487-878c-4780-a32e-e55a82d8e335.json
    networks:
      - ohmyrevit_network
    depends_on:
      - nginx

  nginx:
    image: nginx:1.25-alpine
    container_name: ohmyrevit_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - ohmyrevit_network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ohmyrevit_backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SECRET_KEY: ${SECRET_KEY}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      DEEPL_API_KEY: ${DEEPL_API_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
      DEBUG: ${DEBUG}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    volumes:
      - ./backend:/app
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    networks:
      - ohmyrevit_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ohmyrevit_frontend
    environment:
      NEXT_PUBLIC_API_URL: ${BACKEND_URL}/api/v1
      NEXT_PUBLIC_TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - ohmyrevit_network
    command: npm run dev
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: ohmyrevit_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ohmyrevit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ohmyrevit_redis
    networks:
      - ohmyrevit_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  adminer:
    image: adminer:latest
    container_name: ohmyrevit_adminer
    ports:
      - "8080:8080"
    networks:
      - ohmyrevit_network
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
    restart: unless-stopped


volumes:
  postgres_data: {}

networks:
  ohmyrevit_network:
    driver: bridge